var tipuesearch = {"pages": [{'title': 'About', 'text': '個人倉儲: https://github.com/40823231-2/cd2021 \n', 'tags': '', 'url': 'About.html'}, {'title': 'stage1', 'text': '兩人小組:40823231 40823219 \n 兩人倉儲: https://github.com/40823219/stage1-bg19 \n 製作物品 \n \n \n \n', 'tags': '', 'url': 'stage1.html'}, {'title': 'w1製作討論', 'text': '使用gitter進行小組討論要製作的主題 \n \n', 'tags': '', 'url': 'w1製作討論.html'}, {'title': 'W2~W3製圖及模擬', 'text': '', 'tags': '', 'url': 'W2~W3製圖及模擬.html'}, {'title': '零件圖繪製', 'text': '分工繪製零件圖 \n 組合零件圖，修改尺寸 \n \n 跳板(第一版) \n \n 車身(第一版) \n \n 車輪 \n \n 車桿 \n \n 組合(第一版) \n 零件使用 \n \n \n \n \n \n \n', 'tags': '', 'url': '零件圖繪製.html'}, {'title': 'CoppeliaSim程式模擬', 'text': '彈射車 \n \n', 'tags': '', 'url': 'CoppeliaSim程式模擬.html'}, {'title': 'W4報告影片', 'text': '上台報告影片 \n \n 網頁介紹 \n \n', 'tags': '', 'url': 'W4報告影片.html'}, {'title': 'W5', 'text': '四設計二乙班 40823231 \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'stage2', 'text': '小組倉儲: https://github.com/40823236/stage2-bg9 \n 小組網站: https://40823231-2.github.io/stage2-bg9/content/index.html \n \n', 'tags': '', 'url': 'stage2.html'}, {'title': 'W6製作分工討論', 'text': '使用gitter進行討論，並進行分工 \n 分工如下: \n 繪圖: 40823212 \n 模擬: 40823219、40823231、40823236 \n 程式編排: 40823219、40823231、40823236 \n \n', 'tags': '', 'url': 'W6製作分工討論.html'}, {'title': 'W7~W8零件圖', 'text': '零件繪製以及修改 \n', 'tags': '', 'url': 'W7~W8零件圖.html'}, {'title': 'W8~W9CoppeliaSim程式模擬', 'text': 'CoppeliaSim程式模擬 \n 火車輪CoppeliaSim模擬 \n \n', 'tags': '', 'url': 'W8~W9CoppeliaSim程式模擬.html'}, {'title': 'stage3', 'text': '', 'tags': '', 'url': 'stage3.html'}, {'title': 'task1', 'text': 'stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site ---------- \n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': '利用白窗以及鍵盤控制Coppeliasim \n \n 程式碼 \n import sim as vrep\nimport math\nimport random\nimport time\nimport keyboard\n \nprint (\'Start\')\n \n# Close eventual old connections\nvrep.simxFinish(-1)\n# Connect to V-REP remote server\nclientID = vrep.simxStart(\'192.168.1.111\', 19997, True, True, 5000, 5)\n  \nif clientID !=-1:\n    print (\'Connected to remote API server\')\n   \n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823231",\n        vrep.simx_opmode_oneshot)\n          \n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n          \n    opmode = vrep.simx_opmode_oneshot_wait\n     \n    vrep.simxStartSimulation(clientID, opmode)\n    ret,shaft1=vrep.simxGetObjectHandle(clientID,"shaft_1",opmode)\n    ret,shaft2=vrep.simxGetObjectHandle(clientID,"shaft_2",opmode)\n    ret,shaft3=vrep.simxGetObjectHandle(clientID,"shaft_3",opmode)\n\n    while True:\n        if keyboard.is_pressed("w"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft1,2,opmode)\n            print("w")\n            \n        if keyboard.is_pressed("s"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft1,0,opmode)\n            print("s")\n            \n        if keyboard.is_pressed("a"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft2,2,opmode)\n            print("a")\n\n        if keyboard.is_pressed("b"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft2,0,opmode)\n            print("b")\n            \n        if keyboard.is_pressed("c"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft3,0.1,opmode)\n            print("c")\n\n        if keyboard.is_pressed("z"):\n            vrep.simxSetJointTargetVelocity(clientID,shaft3,0,opmode)\n            print("z")            \nelse:\n    print (\'Failed connecting to  remote API server\')\n    print (\'End\') \n', 'tags': '', 'url': 'task2.html'}, {'title': 'task3', 'text': '', 'tags': '', 'url': 'task3.html'}, {'title': '第11週', 'text': '第一部直播影片 \n \n 第二部直播影片 \n \n', 'tags': '', 'url': '第11週.html'}, {'title': '第12週', 'text': '\n', 'tags': '', 'url': '第12週.html'}, {'title': '第13週', 'text': '遠距離直播討論影片 \n \n', 'tags': '', 'url': '第13週.html'}, {'title': '第15週', 'text': '遠距直播教學影片 \n \n', 'tags': '', 'url': '第15週.html'}, {'title': 'W15', 'text': '', 'tags': '', 'url': 'W15.html'}, {'title': '影片整理', 'text': '影片一 \n \n 首先要先找出A1以及A2的夾角，可以透過畢氏定理列出 \n \n 並透過餘弦定理可以將公式轉換為 \n \n 將公式用COSalpha表示，並將r2次方帶入第一個公式得 \n \n 再透過下圖我們可以得知q2=180-alpha \n \n 因此可得知COSq2=-COSalpha，將負號移過去可以得到 \n \n 因此我們可以得知q2 \n \n 接下來，以a2違長邊畫出一個直角三角形 \n \n 由這個三角形我們可以得到 \n \n 此時劃出一個連接兩條手臂的直角三角形 \n \n 透過此三角形可得出beta角公式 \n \n 劃出一個大直角三角形 \n \n 由此三角形可推得 \n \n \n 透過前面所推導的公式q1可得 \n \n 若手臂移動，如下圖 \n \n 因alpha、beta以及q1關系改變 \n \n 則q1和q2公式會變為 \n \n \n \n 此為兩種比較圖 \n \n \n \n', 'tags': '', 'url': '影片整理.html'}, {'title': 'W16', 'text': 'MTB_ROBOT coppeliasim圖檔 \n onshape圖檔: https://cad.onshape.com/documents/04a281dcf22a682742d498db/w/7d59cd5d07f48e48326d56d5/e/fd8977c50133795f34faad12 \n 雲端檔案:https://drive.google.com/file/d/1Mi5EFiGo5KJ4idQQeo2381ZbJ2FWIqPF/view?usp=sharing \n \n', 'tags': '', 'url': 'W16.html'}, {'title': 'lua程式碼', 'text': 'W16 exam lua程式執行 \xa0(0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05)兩位置放置 \n   \n \n 以下為lua程式碼: \n \n function moving(x,y)\n    a=0.55\n    b=0.368\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area/(2*c)\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.atan(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n\n\nfunction sysCall_threadmain()\n   joint01=sim.getObjectHandle(\'joint01\')\n   joint02=sim.getObjectHandle(\'joint02\')\n   joint03=sim.getObjectHandle(\'joint03\')\n   jointz=sim.getObjectHandle(\'jointz\')\n   sim.setJointTargetPosition(joint01,0)\n   sim.setJointTargetPosition(joint02,0)\n   sim.setJointTargetPosition(joint03,0)\n   sim.setJointTargetPosition(jointz,0)\n   sim.setIntegerSignal("pad_switch",1)\n   sim.setJointTargetPosition(jointz,-0.04)\n   sim.wait(5)\n   while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do\n       sim.setJointTargetPosition(jointz,0)\n       moving(0.2,0.7)\n       sim.wait(5)\n       sim.setIntegerSignal("pad_switch",0)\n       sim.wait(5)\n       sim.setIntegerSignal("pad_switch",1)\n       sim.setJointTargetPosition(jointz,-0.04)\n       sim.wait(5)\n       sim.setJointTargetPosition(jointz,0)\n       sim.wait(5)\n       moving(-0.3,-0.55)\n       sim.wait(5)\n       sim.setIntegerSignal("pad_switch",0)\n       sim.wait(5)\n       sim.setIntegerSignal("pad_switch",1)\n       sim.setJointTargetPosition(jointz,-0.04)\n       sim.wait(5)\n       sim.setJointTargetPosition(jointz,0)\n       sim.wait(5)\n       end\nend\n\nfunction sysCall_cleanup()\n    -- Put some clean-up code here\nend\n\n-- See the user manual or the available code snippets for additional callback functions and details\n \n 程式碼解說 \n \n \n', 'tags': '', 'url': 'lua程式碼.html'}, {'title': '鍵盤指令程式', 'text': '鍵盤程式碼指令 \n 方向左鍵:主臂向左\xa0 方向右鍵:主臂向右 \n 方向左鍵:小臂向左\xa0方向右鍵:小臂向右 \n 吸盤向下吸取:a \n 吸盤向上:t \n 吸盤放下:s \n \n function sysCall_init()\n    joint01=sim.getObjectHandle(\'joint01\')\n    joint02=sim.getObjectHandle(\'joint02\')\n    joint03=sim.getObjectHandle(\'joint03\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0\n    deg2=0\n    deg3=0\nend\n\nfunction sysCall_actuation()\n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==2009) then\n            deg1=deg1+1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2010) then\n            deg1=deg1-1\n            deg3=deg2-deg1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==2007) then\n            deg2=deg2+1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==2008) then\n            deg2=deg2-1\n            deg3=deg1-deg2\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==97) then\n                sim.setJointTargetPosition(jointz,-0.037)\n                sim.setIntegerSignal("pad_switch",1)\n            end\n            if(auxiliaryData[1]==116) then\n                sim.setJointTargetPosition(jointz,0)\n            end\n            if(auxiliaryData[1]==115) then\n                sim.setIntegerSignal("pad_switch",0)\n            end\n            sim.setJointTargetPosition(joint03,deg3*math.pi/180)\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end\nend\n \n \n 程式碼解說', 'tags': '', 'url': '鍵盤指令程式.html'}, {'title': 'python remoteApi程式', 'text': '', 'tags': '', 'url': 'python remoteApi程式.html'}, {'title': 'require', 'text': '使用require操作MTB_ROBOT \n', 'tags': '', 'url': 'require.html'}]};